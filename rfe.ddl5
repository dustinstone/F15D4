CREATE OR REPLACE TRIGGER add_init_approval
AFTER INSERT
ON F15D4_RFE
FOR EACH ROW
BEGIN
    INSERT INTO F15D4_RFE_APPROVAL (EMPLOYEE_TYPE, RFE_ID, LAB_ID, APPROVED, REJECTED)
    VALUES ((SELECT type FROM F15D4_Employee WHERE employee_id = v('CURRENT_EMPLOYEE')), :NEW.RFE_ID, :NEW.LAB_ID, 0, 0);

    UPDATE F15D4_RFE SET status_code = 1 WHERE rfe_id = :NEW.RFE_ID;
END;

CREATE OR REPLACE TRIGGER add_init_history
AFTER INSERT
ON F15D4_RFE
FOR EACH ROW
BEGIN
    INSERT INTO F15D4_STATUSHISTORY (TIMESTAMP, STATUS_CODE, RFE_ID, EMPLOYEE_ID)
    VALUES (SYSDATE, 1, :NEW.RFE_ID, :NEW.EMPLOYEE_ID);
END;

CREATE OR REPLACE TRIGGER APPROVE_RFES
BEFORE
update on F15D4_RFE_APPROVAL
for each row
begin
-- 1 = Approve
-- 2 = Submit
-- 3 = Return
-- 4 = Reject
IF (:NEW.approved = 2) THEN
    :NEW.employee_type := 'Sys Admin';
    :NEW.APPROVED := 0;
    :NEW.REJECTED := 0;
    UPDATE F15D4_RFE SET status_code = 2 WHERE rfe_id = :NEW.RFE_ID;
END IF;

IF (:NEW.approved = 1 AND :NEW.employee_type = 'Sys Admin') THEN
    :NEW.employee_type := 'Lab Director';
    :NEW.APPROVED := 0;
    :NEW.REJECTED := 0;
    UPDATE F15D4_RFE SET status_code = 6 WHERE rfe_id = :NEW.RFE_ID;
END IF;

IF (:NEW.approved = 1 AND :NEW.employee_type = 'Lab Director') THEN
    :NEW.employee_type := 'Chairperson';
    :NEW.APPROVED := 0;
    :NEW.REJECTED := 0;
    UPDATE F15D4_RFE SET status_code = 7 WHERE rfe_id = :NEW.RFE_ID;
END IF;

IF (:NEW.approved = 1 AND :NEW.employee_type = 'Chairperson') THEN
    :NEW.employee_type := 'Executive Director';
    :NEW.APPROVED := 0;
    :NEW.REJECTED := 0;
    UPDATE F15D4_RFE SET status_code = 8 WHERE rfe_id = :NEW.RFE_ID;
END IF;

IF (:NEW.approved = 1 AND :NEW.employee_type = 'Executive Director') THEN
    :NEW.employee_type := 'Final';
    :NEW.APPROVED := 0;
    :NEW.REJECTED := 0;
    UPDATE F15D4_RFE SET status_code = 9 WHERE rfe_id = :NEW.RFE_ID;
END IF;

IF (:NEW.approved = 3 AND :NEW.employee_type != 'Lab Employee') THEN
    :NEW.employee_type := 'Lab Employee';
    :NEW.APPROVED := 0;
    :NEW.REJECTED := 0;
    UPDATE F15D4_RFE SET status_code = 3 WHERE rfe_id = :NEW.RFE_ID;
END IF;

IF (:NEW.approved = 4 AND :NEW.employee_type != 'Lab Employee') THEN
    :NEW.employee_type := 'Rejected';
    UPDATE F15D4_RFE SET status_code = 5 WHERE rfe_id = :NEW.RFE_ID;
END IF;

end;

CREATE OR REPLACE TRIGGER APPROVAL_UPDATE_HISTORY
AFTER
UPDATE ON F15D4_RFE_APPROVAL
FOR EACH ROW
BEGIN
    INSERT INTO F15D4_STATUSHISTORY (TIMESTAMP, STATUS_CODE, RFE_ID, EMPLOYEE_ID)
    VALUES (SYSDATE, (SELECT status_code FROM F15D4_RFE WHERE rfe_id = :NEW.RFE_ID), :NEW.RFE_ID, v('CURRENT_EMPLOYEE'));
END;